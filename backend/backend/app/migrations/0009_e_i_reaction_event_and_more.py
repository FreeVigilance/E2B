# Generated by Django 5.0.2 on 2024-03-18 19:08

import app.src.enums
import django.db.models.deletion
import extensions.django.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0008_d_patient_characteristics_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='E_i_reaction_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_i_1_1a_reaction_primary_source_native_language', models.CharField(null=True)),
                ('e_i_1_1b_reaction_primary_source_language', models.CharField(null=True)),
                ('e_i_1_2_reaction_primary_source_translation', models.CharField(null=True)),
                ('e_i_2_1a_meddra_version_reaction', models.CharField(null=True)),
                ('e_i_2_1b_reaction_meddra_code', models.PositiveIntegerField(null=True)),
                ('e_i_3_1_term_highlighted_reporter', models.IntegerField(choices=[(app.src.enums.E_i_3_1_term_highlighted_reporter['YES_NOT_SERIOUS'], app.src.enums.E_i_3_1_term_highlighted_reporter['YES_NOT_SERIOUS']), (app.src.enums.E_i_3_1_term_highlighted_reporter['NO_NOT_SERIOUS'], app.src.enums.E_i_3_1_term_highlighted_reporter['NO_NOT_SERIOUS']), (app.src.enums.E_i_3_1_term_highlighted_reporter['YES_SERIOUS'], app.src.enums.E_i_3_1_term_highlighted_reporter['YES_SERIOUS']), (app.src.enums.E_i_3_1_term_highlighted_reporter['NO_SERIOUS'], app.src.enums.E_i_3_1_term_highlighted_reporter['NO_SERIOUS'])], null=True)),
                ('e_i_3_2a_results_death', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2a_results_death', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_3_2b_life_threatening', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2b_life_threatening', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_3_2c_caused_prolonged_hospitalisation', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2c_caused_prolonged_hospitalisation', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_3_2d_disabling_incapacitating', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2d_disabling_incapacitating', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_3_2e_congenital_anomaly_birth_defect', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2e_congenital_anomaly_birth_defect', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_3_2f_other_medically_important_condition', models.BooleanField(choices=[(True, True)], null=True)),
                ('nf_e_i_3_2f_other_medically_important_condition', models.CharField(choices=[(app.src.enums.NullFlavor['NI'], app.src.enums.NullFlavor['NI'])], null=True)),
                ('e_i_4_date_start_reaction', models.CharField(null=True)),
                ('nf_e_i_4_date_start_reaction', models.CharField(choices=[(app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['MSK']), (app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK'])], null=True)),
                ('e_i_5_date_end_reaction', models.CharField(null=True)),
                ('nf_e_i_5_date_end_reaction', models.CharField(choices=[(app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['MSK']), (app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK'])], null=True)),
                ('e_i_6a_duration_reaction_num', models.PositiveIntegerField(null=True)),
                ('e_i_6b_duration_reaction_unit', models.CharField(null=True)),
                ('e_i_7_outcome_reaction_last_observation', models.IntegerField(choices=[(app.src.enums.E_i_7_outcome_reaction_last_observation['UNKNOWN'], app.src.enums.E_i_7_outcome_reaction_last_observation['UNKNOWN']), (app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERED_OR_RESOLVED'], app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERED_OR_RESOLVED']), (app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERING_OR_RESOLVING'], app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERING_OR_RESOLVING']), (app.src.enums.E_i_7_outcome_reaction_last_observation['NOT_RECOVERED_OR_NOT_RESOLVED_OR_ONGOING'], app.src.enums.E_i_7_outcome_reaction_last_observation['NOT_RECOVERED_OR_NOT_RESOLVED_OR_ONGOING']), (app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERED_OR_RESOLVED_WITH_SEQUELAE'], app.src.enums.E_i_7_outcome_reaction_last_observation['RECOVERED_OR_RESOLVED_WITH_SEQUELAE']), (app.src.enums.E_i_7_outcome_reaction_last_observation['FATAL'], app.src.enums.E_i_7_outcome_reaction_last_observation['FATAL'])], null=True)),
                ('e_i_8_medical_confirmation_healthcare_professional', models.BooleanField(null=True)),
                ('e_i_9_identification_country_reaction', models.CharField(null=True)),
                ('icsr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_i_reaction_event', to='app.icsr')),
            ],
        ),
        migrations.CreateModel(
            name='F_r_results_tests_procedures_investigation_patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_r_1_test_date', models.CharField(null=True)),
                ('nf_f_r_1_test_date', models.CharField(choices=[(app.src.enums.NullFlavor['UNK'], app.src.enums.NullFlavor['UNK'])], null=True)),
                ('f_r_2_1_test_name', models.CharField(null=True)),
                ('f_r_2_2a_meddra_version_test_name', models.CharField(null=True)),
                ('f_r_2_2b_test_name_meddra_code', models.PositiveIntegerField(null=True)),
                ('f_r_3_1_test_result_code', models.IntegerField(choices=[(app.src.enums.F_r_3_1_test_result_code['POSITIVE'], app.src.enums.F_r_3_1_test_result_code['POSITIVE']), (app.src.enums.F_r_3_1_test_result_code['NEGATIVE'], app.src.enums.F_r_3_1_test_result_code['NEGATIVE']), (app.src.enums.F_r_3_1_test_result_code['BORDERLINE'], app.src.enums.F_r_3_1_test_result_code['BORDERLINE']), (app.src.enums.F_r_3_1_test_result_code['INCONCLUSIVE'], app.src.enums.F_r_3_1_test_result_code['INCONCLUSIVE'])], null=True)),
                ('f_r_3_2_test_result_val_qual', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('nf_f_r_3_2_test_result_val_qual', models.CharField(choices=[(app.src.enums.NullFlavor['NINF'], app.src.enums.NullFlavor['NINF']), (app.src.enums.NullFlavor['PINF'], app.src.enums.NullFlavor['PINF'])], null=True)),
                ('f_r_3_3_test_result_unit', models.CharField(null=True)),
                ('f_r_3_4_result_unstructured_data', models.CharField(null=True)),
                ('f_r_4_normal_low_value', models.CharField(null=True)),
                ('f_r_5_normal_high_value', models.CharField(null=True)),
                ('f_r_6_comments', models.CharField(null=True)),
                ('f_r_7_more_information_available', models.BooleanField(null=True)),
                ('icsr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='f_r_results_tests_procedures_investigation_patient', to='app.icsr')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_9_i_drug_reaction_matrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_9_i_3_1a_interval_drug_administration_reaction_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_9_i_3_1b_interval_drug_administration_reaction_unit', models.CharField(null=True)),
                ('g_k_9_i_3_2a_interval_last_dose_drug_reaction_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_9_i_3_2b_interval_last_dose_drug_reaction_unit', models.CharField(null=True)),
                ('g_k_9_i_4_reaction_recur_readministration', models.IntegerField(choices=[(app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_YES'], app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_YES']), (app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_NO'], app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_NO']), (app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_UNK'], app.src.enums.G_k_9_i_4_reaction_recur_readministration['YES_UNK']), (app.src.enums.G_k_9_i_4_reaction_recur_readministration['NO_NA'], app.src.enums.G_k_9_i_4_reaction_recur_readministration['NO_NA'])], null=True)),
                ('g_k_9_i_1_reaction_assessed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='app.e_i_reaction_event')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_9_i_2_r_assessment_relatedness_drug_reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_9_i_2_r_1_source_assessment', models.CharField(null=True)),
                ('g_k_9_i_2_r_2_method_assessment', models.CharField(null=True)),
                ('g_k_9_i_2_r_3_result_assessment', models.CharField(null=True)),
                ('g_k_9_i_drug_reaction_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_9_i_2_r_assessment_relatedness_drug_reaction', to='app.g_k_9_i_drug_reaction_matrix')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_drug_information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_1_characterisation_drug_role', models.IntegerField(choices=[(app.src.enums.G_k_1_characterisation_drug_role['SUSPECT'], app.src.enums.G_k_1_characterisation_drug_role['SUSPECT']), (app.src.enums.G_k_1_characterisation_drug_role['CONCOMITANT'], app.src.enums.G_k_1_characterisation_drug_role['CONCOMITANT']), (app.src.enums.G_k_1_characterisation_drug_role['INTERACTING'], app.src.enums.G_k_1_characterisation_drug_role['INTERACTING']), (app.src.enums.G_k_1_characterisation_drug_role['DRUG_NOT_ADMINISTERED'], app.src.enums.G_k_1_characterisation_drug_role['DRUG_NOT_ADMINISTERED'])], null=True)),
                ('g_k_2_1_1a_mpid_version', models.CharField(null=True)),
                ('g_k_2_1_1b_mpid', models.CharField(null=True)),
                ('g_k_2_1_2a_phpid_version', models.CharField(null=True)),
                ('g_k_2_1_2b_phpid', models.CharField(null=True)),
                ('g_k_2_2_medicinal_product_name_primary_source', models.CharField(null=True)),
                ('g_k_2_4_identification_country_drug_obtained', models.CharField(null=True)),
                ('g_k_2_5_investigational_product_blinded', models.BooleanField(choices=[(True, True)], null=True)),
                ('g_k_3_1_authorisation_application_number', models.CharField(null=True)),
                ('g_k_3_2_country_authorisation_application', models.CharField(null=True)),
                ('g_k_3_3_name_holder_applicant', models.CharField(null=True)),
                ('g_k_5a_cumulative_dose_first_reaction_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_5b_cumulative_dose_first_reaction_unit', models.CharField(null=True)),
                ('g_k_6a_gestation_period_exposure_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_6b_gestation_period_exposure_unit', models.CharField(null=True)),
                ('g_k_8_action_taken_drug', models.IntegerField(choices=[(app.src.enums.G_k_8_action_taken_drug['UNKNOWN'], app.src.enums.G_k_8_action_taken_drug['UNKNOWN']), (app.src.enums.G_k_8_action_taken_drug['DRUG_WITHDRAWN'], app.src.enums.G_k_8_action_taken_drug['DRUG_WITHDRAWN']), (app.src.enums.G_k_8_action_taken_drug['DOSE_REDUCED'], app.src.enums.G_k_8_action_taken_drug['DOSE_REDUCED']), (app.src.enums.G_k_8_action_taken_drug['DOSE_INCREASED'], app.src.enums.G_k_8_action_taken_drug['DOSE_INCREASED']), (app.src.enums.G_k_8_action_taken_drug['DOSE_NOT_CHANGED'], app.src.enums.G_k_8_action_taken_drug['DOSE_NOT_CHANGED']), (app.src.enums.G_k_8_action_taken_drug['NOT_APPLICABLE'], app.src.enums.G_k_8_action_taken_drug['NOT_APPLICABLE'])], null=True)),
                ('g_k_11_additional_information_drug', models.CharField(null=True)),
                ('icsr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_drug_information', to='app.icsr')),
            ],
        ),
        migrations.AddField(
            model_name='g_k_9_i_drug_reaction_matrix',
            name='g_k_drug_information',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_9_i_drug_reaction_matrix', to='app.g_k_drug_information'),
        ),
        migrations.CreateModel(
            name='G_k_7_r_indication_use_case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_7_r_1_indication_primary_source', models.CharField(null=True)),
                ('nf_g_k_7_r_1_indication_primary_source', models.CharField(choices=[(app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK']), (app.src.enums.NullFlavor['UNK'], app.src.enums.NullFlavor['UNK'])], null=True)),
                ('g_k_7_r_2a_meddra_version_indication', models.CharField(null=True)),
                ('g_k_7_r_2b_indication_meddra_code', models.PositiveIntegerField(null=True)),
                ('g_k_drug_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_7_r_indication_use_case', to='app.g_k_drug_information')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_4_r_dosage_information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_4_r_1a_dose_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_4_r_1b_dose_unit', models.CharField(null=True)),
                ('g_k_4_r_2_number_units_interval', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_4_r_3_definition_interval_unit', models.CharField(null=True)),
                ('g_k_4_r_4_date_time_drug', models.CharField(null=True)),
                ('nf_g_k_4_r_4_date_time_drug', models.CharField(choices=[(app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['MSK']), (app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK'])], null=True)),
                ('g_k_4_r_5_date_time_last_administration', models.CharField(null=True)),
                ('nf_g_k_4_r_5_date_time_last_administration', models.CharField(choices=[(app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['MSK']), (app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK'])], null=True)),
                ('g_k_4_r_6a_duration_drug_administration_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_4_r_6b_duration_drug_administration_unit', models.CharField(null=True)),
                ('g_k_4_r_7_batch_lot_number', models.CharField(null=True)),
                ('g_k_4_r_8_dosage_text', models.CharField(null=True)),
                ('g_k_4_r_9_1_pharmaceutical_dose_form', models.CharField(null=True)),
                ('nf_g_k_4_r_9_1_pharmaceutical_dose_form', models.CharField(choices=[(app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK']), (app.src.enums.NullFlavor['UNK'], app.src.enums.NullFlavor['UNK'])], null=True)),
                ('g_k_4_r_9_2a_pharmaceutical_dose_fom_termid_version', models.CharField(null=True)),
                ('g_k_4_r_9_2b_pharmaceutical_dose_form_termid', models.CharField(null=True)),
                ('g_k_4_r_10_1_route_administration', models.CharField(null=True)),
                ('nf_g_k_4_r_10_1_route_administration', models.CharField(choices=[(app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK']), (app.src.enums.NullFlavor['UNK'], app.src.enums.NullFlavor['UNK'])], null=True)),
                ('g_k_4_r_10_2a_route_administration_termid_version', models.CharField(null=True)),
                ('g_k_4_r_10_2b_route_administration_termid', models.CharField(null=True)),
                ('g_k_4_r_11_1_parent_route_administration', models.CharField(null=True)),
                ('nf_g_k_4_r_11_1_parent_route_administration', models.CharField(choices=[(app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['ASKU']), (app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['NASK']), (app.src.enums.NullFlavor['UNK'], app.src.enums.NullFlavor['UNK'])], null=True)),
                ('g_k_4_r_11_2a_parent_route_administration_termid_version', models.CharField(null=True)),
                ('g_k_4_r_11_2b_parent_route_administration_termid', models.CharField(null=True)),
                ('g_k_drug_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_4_r_dosage_information', to='app.g_k_drug_information')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_2_3_r_substance_id_strength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_2_3_r_1_substance_name', models.CharField(null=True)),
                ('g_k_2_3_r_2a_substance_termid_version', models.CharField(null=True)),
                ('g_k_2_3_r_2b_substance_termid', models.CharField(null=True)),
                ('g_k_2_3_r_3a_strength_num', extensions.django.fields.ArbitraryDecimalField(null=True)),
                ('g_k_2_3_r_3b_strength_unit', models.CharField(null=True)),
                ('g_k_drug_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_2_3_r_substance_id_strength', to='app.g_k_drug_information')),
            ],
        ),
        migrations.CreateModel(
            name='G_k_10_r_additional_information_drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_k_10_r_additional_information_drug', models.IntegerField(choices=[(app.src.enums.G_k_10_r_additional_information_drug['COUNTERFEIT'], app.src.enums.G_k_10_r_additional_information_drug['COUNTERFEIT']), (app.src.enums.G_k_10_r_additional_information_drug['OVERDOSE'], app.src.enums.G_k_10_r_additional_information_drug['OVERDOSE']), (app.src.enums.G_k_10_r_additional_information_drug['DRUG_TAKEN_BY_THE_FATHER'], app.src.enums.G_k_10_r_additional_information_drug['DRUG_TAKEN_BY_THE_FATHER']), (app.src.enums.G_k_10_r_additional_information_drug['DRUG_TAKEN_BEYOND_EXPIRY_DATE'], app.src.enums.G_k_10_r_additional_information_drug['DRUG_TAKEN_BEYOND_EXPIRY_DATE']), (app.src.enums.G_k_10_r_additional_information_drug['BATCH_AND_LOT_TESTED_AND_FOUND_WITHIN_SPECIFICATIONS'], app.src.enums.G_k_10_r_additional_information_drug['BATCH_AND_LOT_TESTED_AND_FOUND_WITHIN_SPECIFICATIONS']), (app.src.enums.G_k_10_r_additional_information_drug['BATCH_AND_LOT_TESTED_AND_FOUND_NOT_WITHIN_SPECIFICATIONS'], app.src.enums.G_k_10_r_additional_information_drug['BATCH_AND_LOT_TESTED_AND_FOUND_NOT_WITHIN_SPECIFICATIONS']), (app.src.enums.G_k_10_r_additional_information_drug['MEDICATION_ERROR'], app.src.enums.G_k_10_r_additional_information_drug['MEDICATION_ERROR']), (app.src.enums.G_k_10_r_additional_information_drug['MISUSE'], app.src.enums.G_k_10_r_additional_information_drug['MISUSE']), (app.src.enums.G_k_10_r_additional_information_drug['ABUSE'], app.src.enums.G_k_10_r_additional_information_drug['ABUSE']), (app.src.enums.G_k_10_r_additional_information_drug['OCCUPATIONAL_EXPOSURE'], app.src.enums.G_k_10_r_additional_information_drug['OCCUPATIONAL_EXPOSURE']), (app.src.enums.G_k_10_r_additional_information_drug['OFF_LABEL_USE'], app.src.enums.G_k_10_r_additional_information_drug['OFF_LABEL_USE'])], null=True)),
                ('g_k_drug_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_k_10_r_additional_information_drug', to='app.g_k_drug_information')),
            ],
        ),
        migrations.CreateModel(
            name='H_narrative_case_summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h_1_case_narrative', models.CharField(null=True)),
                ('h_2_reporter_comments', models.CharField(null=True)),
                ('h_4_sender_comments', models.CharField(null=True)),
                ('icsr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_narrative_case_summary', to='app.icsr')),
            ],
        ),
        migrations.CreateModel(
            name='H_5_r_case_summary_reporter_comments_native_language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h_5_r_1a_case_summary_reporter_comments_text', models.CharField(null=True)),
                ('h_5_r_1b_case_summary_reporter_comments_language', models.CharField(null=True)),
                ('h_narrative_case_summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_5_r_case_summary_reporter_comments_native_language', to='app.h_narrative_case_summary')),
            ],
        ),
        migrations.CreateModel(
            name='H_3_r_sender_diagnosis_meddra_code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h_3_r_1a_meddra_version_sender_diagnosis', models.CharField(null=True)),
                ('h_3_r_1b_sender_diagnosis_meddra_code', models.PositiveIntegerField(null=True)),
                ('h_narrative_case_summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_3_r_sender_diagnosis_meddra_code', to='app.h_narrative_case_summary')),
            ],
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2a_results_death__isnull', True), ('nf_e_i_3_2a_results_death__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2a_results__nf_e_i_3_2a_resu'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2b_life_threatening__isnull', True), ('nf_e_i_3_2b_life_threatening__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2b_life_th__nf_e_i_3_2b_life'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2c_caused_prolonged_hospitalisation__isnull', True), ('nf_e_i_3_2c_caused_prolonged_hospitalisation__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2c_caused__nf_e_i_3_2c_caus'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2d_disabling_incapacitating__isnull', True), ('nf_e_i_3_2d_disabling_incapacitating__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2d_disabli__nf_e_i_3_2d_disa'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2e_congenital_anomaly_birth_defect__isnull', True), ('nf_e_i_3_2e_congenital_anomaly_birth_defect__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2e_congeni__nf_e_i_3_2e_cong'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2f_other_medically_important_condition__isnull', True), ('nf_e_i_3_2f_other_medically_important_condition__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_3_2f_other_m__nf_e_i_3_2f_othe'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_4_date_start_reaction__isnull', True), ('nf_e_i_4_date_start_reaction__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_4_date_start__nf_e_i_4_date_st'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_5_date_end_reaction__isnull', True), ('nf_e_i_5_date_end_reaction__isnull', True), _connector='OR'), name='anynul__E_i_reaction_eve__e_i_5_date_end_r__nf_e_i_5_date_en'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_1_term_highlighted_reporter__in', app.src.enums.E_i_3_1_term_highlighted_reporter)), name='choics__E_i_reaction_event__e_i_3_1_term_highlighted'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2a_results_death__in', [True])), name='choics__E_i_reaction_event__e_i_3_2a_results_death'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2a_results_death__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2a_results_death'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2b_life_threatening__in', [True])), name='choics__E_i_reaction_event__e_i_3_2b_life_threatening'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2b_life_threatening__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2b_life_threaten'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2c_caused_prolonged_hospitalisation__in', [True])), name='choics__E_i_reaction_event__e_i_3_2c_caused_prolonged'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2c_caused_prolonged_hospitalisation__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2c_caused_prolon'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2d_disabling_incapacitating__in', [True])), name='choics__E_i_reaction_event__e_i_3_2d_disabling_incapa'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2d_disabling_incapacitating__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2d_disabling_inc'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2e_congenital_anomaly_birth_defect__in', [True])), name='choics__E_i_reaction_event__e_i_3_2e_congenital_anoma'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2e_congenital_anomaly_birth_defect__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2e_congenital_an'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_3_2f_other_medically_important_condition__in', [True])), name='choics__E_i_reaction_event__e_i_3_2f_other_medically'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_3_2f_other_medically_important_condition__in', [app.src.enums.NullFlavor['NI']])), name='choics__E_i_reaction_event__nf_e_i_3_2f_other_medical'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_4_date_start_reaction__in', [app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK']])), name='choics__E_i_reaction_event__nf_e_i_4_date_start_react'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('nf_e_i_5_date_end_reaction__in', [app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK']])), name='choics__E_i_reaction_event__nf_e_i_5_date_end_reactio'),
        ),
        migrations.AddConstraint(
            model_name='e_i_reaction_event',
            constraint=models.CheckConstraint(check=models.Q(('e_i_7_outcome_reaction_last_observation__in', app.src.enums.E_i_7_outcome_reaction_last_observation)), name='choics__E_i_reaction_event__e_i_7_outcome_reaction_la'),
        ),
        migrations.AddConstraint(
            model_name='f_r_results_tests_procedures_investigation_patient',
            constraint=models.CheckConstraint(check=models.Q(('f_r_1_test_date__isnull', True), ('nf_f_r_1_test_date__isnull', True), _connector='OR'), name='anynul__F_r_results_test__f_r_1_test_date__nf_f_r_1_test_da'),
        ),
        migrations.AddConstraint(
            model_name='f_r_results_tests_procedures_investigation_patient',
            constraint=models.CheckConstraint(check=models.Q(('f_r_3_2_test_result_val_qual__isnull', True), ('nf_f_r_3_2_test_result_val_qual__isnull', True), _connector='OR'), name='anynul__F_r_results_test__f_r_3_2_test_res__nf_f_r_3_2_test'),
        ),
        migrations.AddConstraint(
            model_name='f_r_results_tests_procedures_investigation_patient',
            constraint=models.CheckConstraint(check=models.Q(('nf_f_r_1_test_date__in', [app.src.enums.NullFlavor['UNK']])), name='choics__F_r_results_tests_procedu__nf_f_r_1_test_date'),
        ),
        migrations.AddConstraint(
            model_name='f_r_results_tests_procedures_investigation_patient',
            constraint=models.CheckConstraint(check=models.Q(('f_r_3_1_test_result_code__in', app.src.enums.F_r_3_1_test_result_code)), name='choics__F_r_results_tests_procedu__f_r_3_1_test_result_code'),
        ),
        migrations.AddConstraint(
            model_name='f_r_results_tests_procedures_investigation_patient',
            constraint=models.CheckConstraint(check=models.Q(('nf_f_r_3_2_test_result_val_qual__in', [app.src.enums.NullFlavor['NINF'], app.src.enums.NullFlavor['PINF']])), name='choics__F_r_results_tests_procedu__nf_f_r_3_2_test_result_va'),
        ),
        migrations.AddConstraint(
            model_name='g_k_drug_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_1_characterisation_drug_role__in', app.src.enums.G_k_1_characterisation_drug_role)), name='choics__G_k_drug_information__g_k_1_characterisation_dr'),
        ),
        migrations.AddConstraint(
            model_name='g_k_drug_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_2_5_investigational_product_blinded__in', [True])), name='choics__G_k_drug_information__g_k_2_5_investigational_p'),
        ),
        migrations.AddConstraint(
            model_name='g_k_drug_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_8_action_taken_drug__in', app.src.enums.G_k_8_action_taken_drug)), name='choics__G_k_drug_information__g_k_8_action_taken_drug'),
        ),
        migrations.AddConstraint(
            model_name='g_k_9_i_drug_reaction_matrix',
            constraint=models.CheckConstraint(check=models.Q(('g_k_9_i_4_reaction_recur_readministration__in', app.src.enums.G_k_9_i_4_reaction_recur_readministration)), name='choics__G_k_9_i_drug_reaction_mat__g_k_9_i_4_reaction_recur'),
        ),
        migrations.AddConstraint(
            model_name='g_k_7_r_indication_use_case',
            constraint=models.CheckConstraint(check=models.Q(('g_k_7_r_1_indication_primary_source__isnull', True), ('nf_g_k_7_r_1_indication_primary_source__isnull', True), _connector='OR'), name='anynul__G_k_7_r_indicati__g_k_7_r_1_indica__nf_g_k_7_r_1_ind'),
        ),
        migrations.AddConstraint(
            model_name='g_k_7_r_indication_use_case',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_7_r_1_indication_primary_source__in', [app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['UNK']])), name='choics__G_k_7_r_indication_use_ca__nf_g_k_7_r_1_indication_p'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_4_r_4_date_time_drug__isnull', True), ('nf_g_k_4_r_4_date_time_drug__isnull', True), _connector='OR'), name='anynul__G_k_4_r_dosage_i__g_k_4_r_4_date_t__nf_g_k_4_r_4_dat'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_4_r_5_date_time_last_administration__isnull', True), ('nf_g_k_4_r_5_date_time_last_administration__isnull', True), _connector='OR'), name='anynul__G_k_4_r_dosage_i__g_k_4_r_5_date_t__nf_g_k_4_r_5_dat'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_4_r_9_1_pharmaceutical_dose_form__isnull', True), ('nf_g_k_4_r_9_1_pharmaceutical_dose_form__isnull', True), _connector='OR'), name='anynul__G_k_4_r_dosage_i__g_k_4_r_9_1_phar__nf_g_k_4_r_9_1_p'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_4_r_10_1_route_administration__isnull', True), ('nf_g_k_4_r_10_1_route_administration__isnull', True), _connector='OR'), name='anynul__G_k_4_r_dosage_i__g_k_4_r_10_1_rou__nf_g_k_4_r_10_1'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('g_k_4_r_11_1_parent_route_administration__isnull', True), ('nf_g_k_4_r_11_1_parent_route_administration__isnull', True), _connector='OR'), name='anynul__G_k_4_r_dosage_i__g_k_4_r_11_1_par__nf_g_k_4_r_11_1'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_4_r_4_date_time_drug__in', [app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK']])), name='choics__G_k_4_r_dosage_informatio__nf_g_k_4_r_4_date_time_dr'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_4_r_5_date_time_last_administration__in', [app.src.enums.NullFlavor['MSK'], app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK']])), name='choics__G_k_4_r_dosage_informatio__nf_g_k_4_r_5_date_time_la'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_4_r_9_1_pharmaceutical_dose_form__in', [app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['UNK']])), name='choics__G_k_4_r_dosage_informatio__nf_g_k_4_r_9_1_pharmaceut'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_4_r_10_1_route_administration__in', [app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['UNK']])), name='choics__G_k_4_r_dosage_informatio__nf_g_k_4_r_10_1_route_adm'),
        ),
        migrations.AddConstraint(
            model_name='g_k_4_r_dosage_information',
            constraint=models.CheckConstraint(check=models.Q(('nf_g_k_4_r_11_1_parent_route_administration__in', [app.src.enums.NullFlavor['ASKU'], app.src.enums.NullFlavor['NASK'], app.src.enums.NullFlavor['UNK']])), name='choics__G_k_4_r_dosage_informatio__nf_g_k_4_r_11_1_parent_ro'),
        ),
        migrations.AddConstraint(
            model_name='g_k_10_r_additional_information_drug',
            constraint=models.CheckConstraint(check=models.Q(('g_k_10_r_additional_information_drug__in', app.src.enums.G_k_10_r_additional_information_drug)), name='choics__G_k_10_r_additional_infor__g_k_10_r_additional_infor'),
        ),
    ]
