import typing as t

from django.core.files.uploadedfile import InMemoryUploadedFile


class ServiceProtocol[T](t.Protocol):
    def list(self, model_class: type[T]) -> list[dict[str, t.Any]]: ...

    def read(self, model_class: type[T], pk: int) -> T: ...

    def create(self, model: T) -> tuple[T, bool]: ...

    def update(self, model: T, pk: int) -> tuple[T, bool]: ...

    def delete(self, model_class: type[T], pk: int) -> bool: ...


class BusinessServiceProtocol[T](ServiceProtocol[T], t.Protocol):
    def business_validate(self, model: T) -> tuple[T, bool]: ...


class CIOMSServiceProtocol(t.Protocol):
    def convert_icsr_to_cioms(self, pk: int) -> dict: ...


class MedDRAServiceProtocol[T](t.Protocol):
    def list(self) -> list: ...

    def search(self, search_level: str, search_state, search_input: str, pk: int) -> list: ...

    def read(self, code: str, meddra_version: str) -> T: ...


class CodeSetServiceProtocol[T](t.Protocol):
    def search(self, codeset: str, query: str, lang: str, property: str | None) -> list: ...

    def read(self, codeset: str, code: str, lang: str) -> T: ...

    def create(self, codeset: str, file: InMemoryUploadedFile, language: str): ...